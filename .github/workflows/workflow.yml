name: workflow
on:
  push:
    branches:
      - master
jobs:
  sync:
    if: contains(github.event.head_commit.message, '[CI SKIP]') == false && contains(github.event.head_commit.message, '[CI SYNC]') == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v2
      - name: Set up python version 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install packages generalpackager, .[full] and wheel.
        run: |
          python -m pip install --upgrade pip
          pip install generalpackager .[full] wheel
      - name: Sync package.
        run: python -c 'from generalpackager import Packager; Packager("generalpackager").sync_package("""[CI SYNC] ${{ github.event.head_commit.message }}""")'
        env:
          packager_github_api: ${{ secrets.ACTIONS_TOKEN }}
  unittest:
    if: contains(github.event.head_commit.message, '[CI SKIP]') == false && contains(github.event.head_commit.message, '[CI SYNC]') == true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v2
      - name: Set up python version ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages .[full] and wheel.
        run: |
          python -m pip install --upgrade pip
          pip install .[full] wheel
      - name: Run unittests.
        run: python -m unittest discover generalpackager/test
        env:
          packager_github_api: ${{ secrets.ACTIONS_TOKEN }}