name: workflow
on:
  push:
    branches:
      - master
jobs:
  sync:
    if: contains(github.event.head_commit.message, '[CI SKIP]') == False && contains(github.event.head_commit.message, '[CI SYNC]') == False
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v2
      - name: Set up python version 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install packages .[full], wheel and generalpackager.
        run: |
          python -m pip install --upgrade pip
          pip install .[full] wheel generalpackager
      - name: Generate files, commit them and send requests to GitHub.
        run: |
          python
          from generalpackager import Packager
          packager = Packager('generalpackager')
          packager.generate_localfiles()
          packager.commit_and_push("[CI SYNC] ${{ github.event.head_commit.message }}")
          packager.sync_github_metadata()
          exit()
  unittest:
    if: contains(github.event.head_commit.message, '[CI SKIP]') == False && contains(github.event.head_commit.message, '[CI SYNC]') == True
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v2
      - name: Set up python version ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages .[full] and wheel.
        run: |
          python -m pip install --upgrade pip
          pip install .[full] wheel
      - name: Run unittests.
        run: |
          python generalpackager/test/main.py packager_github_api=${{ secrets.ACTIONS_TOKEN }}